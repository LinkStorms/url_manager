Creating a short url and returning the short url id if the creation was successful.
---
tags:
  - URL
parameters:
  - in: header
    name: Authorization
    required: true
    type: string
    description: Bearer token
  - in: body
    name: short_url
    description: New short url to be created.
    schema:
        type: object
        properties:
            alias:
                type: string
                description: Alias for shortening the url.
                in: body
                example: "short"
                required: false
            url:
                type: string
                description: A valid url.
                in: body
                example: "https://link.com/looooooooooooooooong"
                required: true
            note:
                type: string
                description: An optional note to be saved with the short url.
                in: body
                example: Link to buy discounted shoes.
                required: false
            preferred_service:
                type: string
                description: The preferred service to be used for shortening the url.
                in: body
                example: "tinyurl"
                required: false
responses:
    200:
        description: Successful operation. The id of the created short url will be returned.
        schema:
            properties:
                code:
                    type: integer
                    description: The status code
                    example: 200
                data:
                    type: object
                    properties:
                        short_url_id:
                            type: integer
                            description: The id of created short url
                            example: 99
                        short_url:
                            type: string
                            description: The short url
                            example: "https://link.com/short"
                errors:
                    type: array
                    items:
                        type: string
                    description: The errors
                    example: []
    400:
        description: Bad request. Validation on one or more required parameters failed.
        schema:
            properties:
                code:
                    type: integer
                    description: The status code
                    example: 400
                data:
                    type: object
                    example: {}
                errors:
                    type: array
                    items:
                        type: string
                    description: The errors
                    example: [
                        "Short Url is not valid.",
                        "User does not exist."
                    ]
    409:
        description: This short url already exists.
        schema:
            properties:
                code:
                    type: integer
                    description: The status code
                    example: 409
                data:
                    type: object
                    example: {}
                errors:
                    type: array
                    items:
                        type: string
                    description: The errors
                    example: ["Short Url already exists."]
    5XX:
        description: There was an unexpected error processing your request.
        schema:
            properties:
                code:
                    type: integer
                    description: The status code
                    example: 5XX
                data:
                    type: object
                    example: {}
                errors:
                    type: array
                    items:
                        type: string
                    description: The errors
                    example: ["Something went wrong."]
